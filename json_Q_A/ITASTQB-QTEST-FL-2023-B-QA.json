[
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 7,
    "question_number": "1",
    "question_text": "Quale dei seguenti è un esempio del motivo per cui il testing è necessario?",
    "question_image": "",
    "question_option": {
      "a": "Il testing dinamico aumenta la qualità causando il fallimento degli oggetti di test nei modi che non potrebbero mai essere realizzati dagli utenti",
      "b": "Il testing statico viene utilizzato dagli sviluppatori per identificare i failure nel loro codice prima che si verifichino nel testing dinamico",
      "c": "L'analisi statica fornisce ai clienti la prova che gli elementi del sistema che non forniscono un output sono idonei al rilascio",
      "d": "Le review aumentano la qualità delle specifiche dei requisiti e riducono la necessità di modifiche nei prodotti di lavoro derivati"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 8,
    "answer_option": "d",
    "answer_option_text": {
      "d": "È corretta. Le review sono una forma di testing statico che può essere applicata fin dall'inizio del ciclo di vita dello sviluppo software e sono utilizzate per rilevare i difetti che possono essere corretti prima che le attività successive di sviluppo perdano tempo ed effort per requisiti difettosi. Se i difetti non vengono rilevati e corretti il prima possibile, quando il difetto viene rilevato i prodotti di lavoro derivati, come la progettazione e il codice, dovranno essere modificati, perché si basavano su requisiti difettosi"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Spesso è possibile utilizzare il testing dinamico per far fallire un oggetto di test in modi che non potrebbero mai essere ottenuti dagli utenti, ad esempio utilizzando il fault injection. Tuttavia, se il failure non può mai verificarsi con gli utenti finali reali, la sua identificazione non è particolarmente preziosa, in quanto il testing è finalizzato a migliorare il prodotto di lavoro per gli utenti finali. Passare il tempo ad eseguire il testing per failure che non possono verificarsi con gli utenti reali non è un utilizzo efficiente del tempo del tester",
      "b": "Non è corretta. Il testing statico, sotto forma di analisi statica, viene utilizzato dagli sviluppatori per identificare i difetti nel loro codice del programma prima che possano essere identificati attraverso il testing dinamico. Si noti, tuttavia, che il testing statico (e l'analisi statica) viene utilizzato per rilevare difetti, non failure, che invece vengono rilevati dal testing dinamico. Pertanto, è l'uso del termine \"failure\" che rende questa opzione non corretta",
      "c": "Non è corretta. L'analisi statica rileva direttamente le anomalie nel codice, che possono essere difetti, e questo è in genere fornito per lo sviluppatore, non per il cliente. Fornire le prove per il rilascio attraverso l'utilizzo dell'analisi statica degli elementi del sistema che non forniscono alcun output non ha senso"
    },
    "ambiguous": false,
    "learning_objective": "FL-1.2.1",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 7,
    "question_number": "2",
    "question_text": "Quale delle seguenti affermazioni sulla Quality Assurance (QA) e/o sul Quality Control (QC) è corretta?",
    "question_image": "",
    "question_option": {
      "a": "La Quality Assurance viene eseguita come parte del testing",
      "b": "Il testing viene eseguito come parte del Quality Control",
      "c": "Testing è un altro termine per indicare il Quality Control",
      "d": "Il testing viene eseguito come parte della Quality Assurance"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 9,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta. QC mira ad ottenere livelli di qualità appropriati focalizzandosi sull'identificazione e correzione dei difetti di prodotto. Il testing è una parte importante del QC e aiuta a scoprire questi difetti"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Quality Assurance (QA) si focalizza sul miglioramento del processo e sull'implementazione del processo, utilizzando un approccio preventivo per evitare errori e difetti, mentre il testing è una forma di Quality Control (QC) che viene utilizzata per rilevare i difetti",
      "c": "Non è corretta. Sebbene il testing sia una parte significativa del QC e aiuti a scoprire i difetti, altre tecniche (non di test) utilizzate nel QC includono metodi formali come la verifica del modello, la prova di correttezza, la simulazione e la prototipazione",
      "d": "Non è corretta. QA si concentra sul miglioramento del processo e sull'implementazione del processo, utilizzando un approccio preventivo per evitare errori e difetti, mentre il testing è una forma di QC che viene utilizzata per rilevare i difetti"
    },
    "ambiguous": false,
    "learning_objective": "FL-1.2.2",
    "k_level": "K1",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 7,
    "question_number": "3",
    "question_text": "Uno dei \"principi del testing\" afferma che il testing esaustivo è impossibile. Quale dei seguenti è un esempio di come indirizzare nella pratica questo principio?",
    "question_image": "",
    "question_option": {
      "a": "Creare test case che coprano tutti i possibili output specificati",
      "b": "Documentare tutte le possibili varianti degli input dei test e prioritizzarli in base all'importanza",
      "c": "Iniziare il testing il prima possibile con le review e altri approcci di testing statico",
      "d": "Utilizzare il partizionamento di equivalenza e l'analisi ai valori limite per generare i test case"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 11,
    "answer_option": "d",
    "answer_option_text": {
      "d": "È corretta. L'uso del partizionamento di equivalenza e dell'analisi ai valori limite per generare test case è un modo per indirizzare il principio, poiché queste tecniche di test forniscono un modo sistematico per derivare un sottoinsieme finito di tutti i possibili test case"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. II principio afferma che non è possibile testare tutto, ad eccezione dei casi triviali. Testare tutto richiederebbe il testing di ogni possibile variazione degli input di test in tutte le diverse circostanze, che è generalmente inattuabile poiché esisterà un numero praticamente infinito. Testare ogni possibile output specificato non indirizzerà il problema, poiché la relazione tra gli input e gli output specificati può essere differente per ogni oggetto di test. Alcune volte, possono esistere un numero praticamente infinito di possibili output specificati (p.e. quando esistono differenti variabili che rappresentano numeri reali), mentre altre volte possono esistere solo due output specificati, come una singola variabile che può essere vera o falsa",
      "b": "Non è corretta. Il principio afferma che non è possibile testare ogni possibile variazione degli input di test in tutte le diverse circostanze. Questo perché per i sistemi non triviali esiste un numero praticamente infinito. Pertanto, nella pratica, documentare tutte le possibili variazioni degli input di test sarebbe impraticabile, perché richiederebbe un tempo infinito",
      "c": "Non è corretta. Iniziare il testing il prima possibile con le review e con altri approcci di testing statico non indirizza il problema del numero eccessivo di possibili test case. Il principio \"il testing anticipato permette di risparmiare tempo e denaro\" riguarda la correzione anticipata dei difetti per prevenire la presenza di difetti successivi nei prodotti di lavoro derivati, riducendo così i costi e la probabilità di failure"
    },
    "ambiguous": false,
    "learning_objective": "FL-1.3.1",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 7,
    "question_number": "4",
    "question_text": "Quale attività di test implica di lavorare con i requisiti dei dati di test, con le condizioni di test, con i requisiti dell'ambiente di test e con i test case?",
    "question_image": "",
    "question_option": {
      "a": "Progettazione dei test",
      "b": "Esecuzione dei test",
      "c": "Analisi dei test",
      "d": "Implementazione dei test"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 12,
    "answer_option": "a",
    "answer_option_text": {
      "a": "È corretta. La progettazione dei test prevede l'utilizzo delle condizioni di test per creare i test case e altro testware necessario, come i requisiti dei dati di test e i test charter per il testing esplorativo. Vengono inoltre specificati i requisiti dell'ambiente di test, che includono l'infrastruttura e gli strumenti necessari"
    },
    "no_answer_option_text": {
      "b": "Non è corretta. L'esecuzione dei test prevede l'esecuzione dei test case (come parte delle procedure di test), ma non copre direttamente il restante testware menzionato nella domanda, come i requisiti dei dati di test, i requisiti dell'ambiente di test e le condizioni di test",
      "c": "Non è corretta. L'analisi dei test viene utilizzata per identificare le funzionalità che devono essere testate. La base di test viene analizzata e definita come condizione di test, che viene poi prioritizzata insieme ai rischi correlati. Sebbene questa attività preveda di lavorare con le condizioni di test, non copre il restante testware menzionato nella domanda, come i requisiti dei dati di test, i requisiti dell'ambiente di test e i test case",
      "d": "Non è corretta. L'implementazione dei test include la generazione delle procedure di test, come i test script manuali e automatizzati, che vengono creati a partire dai test case e possono essere organizzati in test suite. Le procedure di test vengono prioritizzate e organizzate in una schedulazione di esecuzione dei test. Vengono creati i dati di test, viene costruito l'ambiente di test e viene verificato il suo set up. Sebbene questa attività preveda esplicitamente di lavorare con i test case, e possa utilizzare i requisiti dei dati di test e i requisiti dell'ambiente di test per creare i dati di test e l'ambiente di test, non copre le condizioni di test"
    },
    "ambiguous": false,
    "learning_objective": "FL-1.4.1",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 8,
    "question_number": "5",
    "question_text": "Quale dei seguenti elementi è PIÙ probabile che abbia un impatto su come il testing viene eseguito per un determinato oggetto di test?",
    "question_image": "",
    "question_option": {
      "a": "Il livello medio di esperienza del team di marketing dell'organizzazione",
      "b": "La consapevolezza da parte degli utenti che si sta sviluppando un nuovo sistema per loro",
      "c": "Il numero di anni di esperienza dei membri del team di test",
      "d": "La struttura organizzativa dell'utente finale per un'applicazione commerciale di streaming musicale"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 13,
    "answer_option": "c",
    "answer_option_text": {
      "c": "È corretta. Il numero di anni di esperienza dei membri del team di performance testing aiuterà a determinare le capacità e le conoscenze (p.e. dei differenti strumenti e tipi di difetti) che i membri del team applicheranno durante il testing"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. È improbabile che il team di marketing dell'organizzazione esegua molto testing (anche se in alcune organizzazioni può essere coinvolto nel testing di accettazione), quindi è improbabile che il loro livello medio di esperienza (per lo più nel marketing) abbia un impatto su come viene eseguito il testing per un determinato oggetto di test",
      "b": "Non è corretta. È improbabile che il livello di conoscenza degli utenti sul fatto che si stia costruendo un nuovo sistema per loro possa influire su come venga eseguito il testing. Qualsiasi coinvolgimento degli utenti che potrebbe influenzare come il testing venga eseguito è più probabile che sia il risultato di decisioni prese dai tester, dal cliente e dal project manager",
      "d": "Non è corretta. La struttura organizzativa dei differenti utenti finali (che possono essere molti) cambierà da un utente all'altro. Quindi, può anche non essere nota quando l'applicazione viene testata, e la struttura organizzativa dell'utente finale può quindi avere poco effetto su come viene eseguito il testing"
    },
    "ambiguous": false,
    "learning_objective": "FL-1.4.2",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 8,
    "question_number": "6",
    "question_text": "Quale delle seguenti affermazioni è un esempio CORRETTO del valore della tracciabilità?",
    "question_image": "",
    "question_option": {
      "a": "La tracciabilità tra i rischi mitigati e i test case superati fornisce un mezzo per determinare il livello di rischio residuo",
      "b": "La tracciabilità tra i requisiti utente e i risultati dell'esecuzione dei test fornisce un mezzo per misurare i progressi del progetto rispetto agli obiettivi di business",
      "c": "La tracciabilità tra i tester e i test case falliti fornisce un mezzo per determinare il livello di competenza dei tester",
      "d": "La tracciabilità tra i rischi identificati e le condizioni di test specificate fornisce un mezzo perdeterminare quali rischi dovrebbero essere testati"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 14,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta. La tracciabilità tra i requisiti utente e i risultati dell'esecuzione dei test fornisce un'indicazione di quali requisiti utente sono stati testati e quindi fornisce un mezzo per misurare l'avanzamento del progetto (nel contesto del testing) rispetto agli obiettivi di business"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. La tracciabilità tra i rischi mitigati e i test case superati fornisce poche informazioni, perché per essere mitigati (attraverso il testing) i rischi dovrebbero avere un corrispondente test case superato. Per poter valutare il rischio residuo, deve essere disponibile la tracciabilità tra tutti i rischi e i risultati dei test, in modo da poter identificare come rischi residui quei rischi che non hanno un corrispondente test superato",
      "c": "Non è corretta. Non è chiaro se i test case falliti forniscano un'indicazione delle competenze del tester più che dei test case superati. Questo dipenderebbe in parte dall'obiettivo del test (p.e. creare confidenza o causare failure). Inoltre, tale misura dei tester basata sui test case superati e falliti può essere controproducente, in quanto potrebbe indurre i tester a ottimizzare il loro testing in base a tale metrica piuttosto che all'obiettivo del test",
      "d": "Non è corretta. La tracciabilità tra i rischi identificati e le condizioni di test specificate fornisce un mezzo per determinare quali ulteriori condizioni di test devono essere specificate. Determinare quali rischi valga la pena di testare fa parte del risk management e, in particolare, della mitigazione del rischio"
    },
    "ambiguous": false,
    "learning_objective": "FL-1.4.4",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 8,
    "question_number": "7",
    "question_text": "Quale dei seguenti è il PIÙ probabile esempio di un tester che utilizza una competenza generica durante il testing?",
    "question_image": "",
    "question_option": {
      "a": "La profonda conoscenza del tester su una varietà di giochi per computer gli ha permesso di andare d'accordo con uno degli sviluppatori, anche lui appassionato di giochi",
      "b": "Il tester ha lavorato in precedenza come pilota ed è stato in grado di comprendere meglio i criteri di accettazione del sistema di controllo dell'elicottero",
      "c": "Il tester ha lavorato in precedenza come programmatore e ha utilizzato le sue competenze in questo settore per comunicare meglio con i business analyst",
      "d": "Il tester è stato molto attento a non commettere errori quando ha generato metodicamente i test case prima di iniziare la sessione di testing esplorativo"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 15,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta. La conoscenza di dominio che può essere utilizzata per comprendere e comunicare con gli utenti finali e i rappresentanti di business è una delle competenze generiche richieste ai tester. Un tester con esperienza di pilota sarebbe in grado di apprezzare meglio i criteri di accettazione per il sistema di controllo dell'elicottero"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Forti capacità comunicative, ascolto attivo (active listening) e capacità di lavoro di squadra consentono a un tester di interagire efficacemente con tutti gli stakeholder, ma una profonda conoscenza di una varietà di giochi per computer che gli consenta di andare d'accordo con uno sviluppatore non è un esempio di competenza generica utile ai tester",
      "c": "Non è corretta. Sebbene le competenze di programmazione possano essere considerate conoscenze tecniche che possono aumentare l'efficienza nell'utilizzo di alcuni strumenti di test, è improbabile che queste competenze migliorino la comunicazione con i business analyst",
      "d": "Non è corretta. Sebbene la scrupolosità, l'attenzione ai dettagli, la curiosità e l'approccio metodico per identificare difetti difficili da rilevare siano tutte competenze generiche utili per i tester, è improbabile che i tester generino test case prima di iniziare il testing esplorativo. Infatti, uno dei punti fondamentali del testing esplorativo è che i test case sono generati durante il testing, non vengono progettati in anticipo"
    },
    "ambiguous": false,
    "learning_objective": "FL-1.5.1",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 8,
    "question_number": "8",
    "question_text": "Quale dei seguenti è un vantaggio dell'approccio whole-team?",
    "question_image": "",
    "question_option": {
      "a": "Permette ai membri del team di assumere qualsiasi ruolo in qualsiasi momento",
      "b": "Necessita di un solo team per supportare l'intero progetto di sviluppo",
      "c": "Rappresentanti di business e sviluppatori sono parte dello stesso team",
      "d": "Genera una sinergia nel team che va a vantaggio dell'intero progetto"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 16,
    "answer_option": "d",
    "answer_option_text": {
      "d": "E corretta. Sfruttando al meglio le diverse competenze di ogni membro del team, l'approccio whole-team favorisce dinamiche superiori del team, promuove una comunicazione e una collaborazione solide, e genera una sinergia del team che va a vantaggio dell'intero progetto"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. L'approccio whole-team consente a qualsiasi membro del team, con le competenze e le conoscenze necessarie, di svolgere qualsiasi compito, ma questo non significa che i membri del team possano assumere qualsiasi ruolo in qualsiasi momento. In genere, assumono solo i ruoli in cui sono competenti e non è detto che ogni membro del team possa svolgere ogni ruolo",
      "b": "Non è corretta. L'approccio whole-team si applica su come lavora un singolo team (in genere nello sviluppo software Agile); non copre come più team si supponga lavorino su progetti più grandi e non suggerisce che sia necessario un solo \"whole\" team per un progetto completo",
      "c": "Non è corretta. L'approccio whole-team non prevede che ogni membro del team sia coinvolto in ogni decisione importante. Ad esempio, non è necessario che il rappresentante di business (cioè il Product Owner) sia coinvolto in ogni decisione tecnica che non influisce sul risultato di business e l'implementazione di tale approccio rallenterebbe inutilmente i progressi del team"
    },
    "ambiguous": false,
    "learning_objective": "FL-1.5.2",
    "k_level": "K1",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 9,
    "question_number": "9",
    "question_text": "Quale delle seguenti affermazioni sul ciclo di vita dello sviluppo software selezionato è CORRETTA?",
    "question_image": "",
    "question_option": {
      "a": "Se si utilizza lo sviluppo software Agile, l'automazione dei test di sistema sostituisce la necessità di eseguire il regression testing",
      "b": "Se si utilizza un modello di sviluppo sequenziale, il testing dinamico è generalmente limitato alle fasi avanzate del ciclo di vita",
      "c": "Se si utilizza un modello di sviluppo iterativo, il testing di componente è generalmente eseguito manualmente dagli sviluppatori",
      "d": "Se si utilizza un modello di sviluppo incrementale, il testing statico viene eseguito nei primi incrementi e il testing dinamico nei successivi incrementi"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 17,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta. Se viene utilizzato un modello di sviluppo sequenziale, all'inizio del ciclo di vita il codice non è disponibile per l'esecuzione e quindi, durante questo periodo viene eseguito il testing statico (p.e. review). Nelle fasi successive nel ciclo di vita, quando il codice è disponibile per l'esecuzione, è possibile eseguire il testing dinamico. Si noti, tuttavia, che la preparazione per il testing dinamico avverrà spesso all'inizio di qualsiasi ciclo di vita dello sviluppo software"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Nello sviluppo software Agile, i rilasci vengono prodotti in ogni iterazione e il rilascio frequente di incrementi richiede un regression testing completo. Anche se alcuni (o tutti) questi regression test possono essere automatizzati, il regression testing (automatizzato o non) non può essere sostituito dalla test automation del sistema",
      "c": "Non è corretta. Se si utilizza un modello di sviluppo iterativo, come lo sviluppo software Agile, i test di componente possono essere ben utilizzati per il regression testing di ogni iterazione. In questo caso, esiste una forte argomentazione per l'automatizzazione di questi test di componente, che dovranno essere eseguiti frequentemente, mentre è improbabile che esista una forte argomentazione per gli sviluppatori che eseguono questi test di componente manualmente",
      "d": "Non è corretta. Nella maggior parte dei modelli di sviluppo incrementale, i rilasci vengono prodotti in ogni incremento richiedendo, per ogni incremento rilasciato, sia testing statico sia testing dinamico a tutti i livelli di test"
    },
    "ambiguous": false,
    "learning_objective": "FL-2.1.1",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 9,
    "question_number": "10",
    "question_text": "Quale delle seguenti è una buona pratica del testing che si applica a tutti i cicli di vita dello sviluppo software?",
    "question_image": "",
    "question_option": {
      "a": "I tester dovrebbero eseguire la review dei prodotti di lavoro come parte della successiva fase di sviluppo",
      "b": "I tester dovrebbero eseguire la review di un prodotto di lavoro non appena la versione draft è disponibile",
      "c": "I tester dovrebbero eseguire la review dei prodotti di lavoro prima di iniziare l'analisi dei test",
      "d": "I tester dovrebbero eseguire la review dei prodotti di lavoro subito dopo il loro rilascio"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 18,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta. I tester dovrebbero eseguire la review dei prodotti di lavoro non appena sono disponibili le versioni draft, per consentire un testing anticipato come parte di un approccio shift-left"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. I tester dovrebbero eseguire la review dei prodotti di lavoro non appena sono disponibili le versioni draft, per consentire un testing anticipato come parte di un approccio shift-left. Se aspettassero fino alla successiva fase di sviluppo, si potrebbe iniziare un'attività di sviluppo (e di test) non necessaria su prodotti di lavoro non revisionati e difettosi",
      "c": "Non è corretta. I tester generalmente eseguono la review dei prodotti di lavoro che costituiscono la base di test durante l'analisi dei test, non prima",
      "d": "Non è corretta. I tester dovrebbero eseguire la review dei prodotti di lavoro non appena sono disponibili le versioni draft, per consentire un testing anticipato come parte di un approccio shift- left . Aspettare che vengano rilasciati significa che tutti i difetti che potrebbero essere rilevati dalla review dei tester saranno presenti nel documento rilasciato"
    },
    "ambiguous": false,
    "learning_objective": "FL-2.1.2",
    "k_level": "K1",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 9,
    "question_number": "11",
    "question_text": "Quale dei seguenti è un esempio di approccio test-first allo sviluppo?",
    "question_image": "",
    "question_option": {
      "a": "Test-Driven Development",
      "b": "Coverage-Driven Development",
      "c": "Quality-Driven Development",
      "d": "Feature-Driven Development"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 18,
    "answer_option": "a",
    "answer_option_text": {
      "a": "È corretta. Test-Driven Development (TDD) è un esempio conosciuto di approccio test-first allo sviluppo"
    },
    "no_answer_option_text": {
      "b": "Non è corretta. Coverage-Driven Development non è un esempio corretto di approccio test-first allo sviluppo",
      "c": "Non è corretta. Quality-Driven Development non è un esempio corretto di approccio test-first allo sviluppo",
      "d": "Non è corretta. Feature-Driven Development non è un esempio di approccio test-first allo sviluppo, ma è una metodologia di sviluppo software Agile basata sul rilascio di funzionalità (a differenza delle user story in Scrum)"
    },
    "ambiguous": false,
    "learning_objective": "FL-2.1.3",
    "k_level": "K1",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 9,
    "question_number": "12",
    "question_text": "Quale delle seguenti affermazioni su DevOps è CORRETTA?",
    "question_image": "",
    "question_option": {
      "a": "Per accelerare i rilasci, viene utilizzata il continuous integration per incoraggiare gli sviluppatori a sottomettere velocemente il codice senza la necessità di completare il testing di componente",
      "b": "Per poter aggiornare e rilasciare i sistemi con maggiore frequenza, sono necessari molti regression test automatizzati per ridurre il pericolo di regressione",
      "c": "Per trattare in modo equo sia gli sviluppatori che operations, i tester allocheranno più effort al testing della release da parte di operations, utilizzando un approccio shift-right",
      "d": "Per creare una maggiore sinergia tra tester, sviluppatori e operations, il testing deve diventare completamente automatizzato, senza alcun testing manuale"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 19,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta. DevOps migliora il testing in diversi modi, ad esempio fornendo un feedback rapido sulla qualità del codice, applicando un testing di regressione automatizzato che minimizza il rischio di regressione e promuovendo un approccio shift-left con codice di alta qualità e test di componente"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. DevOps migliora il testing in diversi modi, ad esempio fornendo un feedback rapido sulla qualità del codice, applicando un testing di regressione automatizzato che minimizza il rischio di regressione e promuovendo un approccio shift-left con codice di alta qualità e test di componente. Questo è in gran parte fornito attraverso la continuous integration, where gli sviluppatori eseguono i test di componente (unit test) con il loro nuovo codice, che devono essere superati affinchè il codice sia inserito nella build. Pertanto, gli sviluppatori devono completare il testing di componente",
      "c": "Non è corretta. DevOps migliora il testing in diversi modi, ad esempio fornendo un feedback rapido sulla qualità del codice, applicando un testing di regressione automatizzato che minimizza il rischio di regressione e promuovendo un approccio shift-left con codice di alta qualità e test di componente. I tester non cercano di trattare gli sviluppatori e operations allo stesso modo dedicando più tempo al testing del rilascio, anche se è possibile utilizzare un approccio shift-right al testing (testing in produzione)",
      "d": "Non è corretta. I processi automatizzati come il continuous integration/continuous delivery (CI/CD) in DevOps facilitano la creazione di ambienti di test stabili e riducono la necessità del testing manuale; tuttavia, esiste il rischio di trascurare l'importanza del testing manuale, soprattutto dal punto di vista dell'utente"
    },
    "ambiguous": false,
    "learning_objective": "FL-2.1.4",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 10,
    "question_number": "13",
    "question_text": "Quale dei seguenti è PIÙ probabile che venga eseguito come parte del testing di sistema?",
    "question_image": "",
    "question_option": {
      "a": "Testing di sicurezza di un sistema di credit management da parte di un team di test indipendente",
      "b": "Testing dell'interfaccia di un sistema di cambio valuta con un sistema bancario esterno",
      "c": "Beta testing di un sistema di apprendimento a distanza da parte degli sviluppatori di software didattico",
      "d": "Testing dell'interazione tra user interface e database relativi a un sistema di risorse umane"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 20,
    "answer_option": "a",
    "answer_option_text": {
      "a": "È corretta. Il testing di sistema esamina il comportamento e le capacità del sistema completo e copre il testing non-funzionale delle caratteristiche di qualità, che include il testing di sicurezza. Questo tipo di test viene spesso eseguito da un team di test indipendente sulla base delle specifiche di sistema"
    },
    "no_answer_option_text": {
      "b": "Non è corretta. Il testing di integrazione dei sistemi esamina le interfacce con altri sistemi e con servizi esterni",
      "c": "Non è corretta. Beta testing è un tipo di testing di accettazione eseguito in un luogo esterno da ruoli esterni all'organizzazione di sviluppo",
      "d": "Non è corretta. Il testing di integrazione dei componenti comporta il testing delle (interfacce e) interazioni tra i componenti di un sistema, come l'interfaccia utente e il database"
    },
    "ambiguous": false,
    "learning_objective": "FL-2.2.1",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 10,
    "question_number": "14",
    "question_text": "Quale delle seguenti affermazioni è CORRETTA?",
    "question_image": "",
    "question_option": {
      "a": "Il numero di regression test aumenta con l'avanzare del progetto, mentre il numero di test confermativi diminuisce con l'avanzare del progetto",
      "b": "I regression test vengono creati ed eseguiti quando l'oggetto di test è stato corretto, mentre i test confermativi vengono eseguiti ogni volta che l'oggetto di test viene migliorato",
      "c": "Il regression testing si occupa di verificare che l'ambiente operativo rimanga invariato, mentre il testing confermativo si occupa del testing delle modifiche all'oggetto di test",
      "d": "Il regression testing si occupa degli effetti negativi in un codice non modificato, mentre il testing confermativo si occupa del testing di un codice modificato"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 21,
    "answer_option": "d",
    "answer_option_text": {
      "d": "È corretta. Il regression testing assicura che le modifiche non abbiano effetti negativi sul software non modificato. Il testing confermativo verifica che un difetto sia stato corretto, e quindi riguarda il codice modificato"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Il numero di regression test aumenta con l'avanzare del progetto, poiché i regression test sono generalmente richiesti quando vengono apportate modifiche al sistema. Allo stesso modo, anche il numero di test confermativi generalmente aumenta con l'avanzare del progetto, poiché sono necessari nuovi test confermativi per ogni correzione apportata al sistema",
      "b": "Non è corretta. È il contrario. I test confermativi vengono creati ed eseguiti quando l'oggetto di test viene corretto, mentre i regression test vengono eseguiti (idealmente) ogni volta che l'oggetto di test viene migliorato (modificato)",
      "c": "Non è corretta. Il testing confermativo verifica che un difetto sia stato risolto correttamente e quindi si occupa di testare le modifiche all'oggetto di test. Tuttavia, il regression testing assicura che le modifiche (comprese quelle all'ambiente operativo) non abbiano effetti negativi sul software non modificato e quindi non verifica che l'ambiente operativo rimanga invariato"
    },
    "ambiguous": false,
    "learning_objective": "FL-2.2.3",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 10,
    "question_number": "15",
    "question_text": "Quale dei seguenti è un esempio di difetto che può essere rilevato attraverso il testing statico ma NON attraverso il testing dinamico?",
    "question_image": "",
    "question_option": {
      "a": "Mancanza di usabilità dell'interfaccia utente",
      "b": "Codice senza cammini non raggiungibili",
      "c": "Tempi di risposta insufficienti per la maggior parte degli utenti previsti",
      "d": "Funzionalità richieste che non sono implementate nel codice"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 22,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta. Una code review può rilevare il codice che non può essere raggiunto da nessun percorso, tuttavia i test dinamici possono solo esercitare il codice raggiungibile e non possono determinare che il codice non può essere raggiunto senza aver eseguito tutte le possibili combinazioni di input e stati di input, e questo è impraticabile per il codice reale"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Una mancanza di usabilità dell'interfaccia utente può essere rilevata attraverso una review che utilizza una checklist adeguata, ma la mancanza di usabilità può essere identificata anche chiedendo a diversi tipici utenti di testare dinamicamente l'interfaccia utente e di fornire un feedback sulla sua usabilità",
      "c": "Non è corretta. I tempi di risposta insufficienti per la maggior parte degli utenti previsti sono difficili da determinare senza eseguire il codice (cioè con il testing statico), quindi in questa situazione il testing dinamico potrebbe trovare un difetto, ma è improbabile che il testing statico ne trovi",
      "d": "Non è corretta. Una code review da parte di qualcuno che conosce le funzionalità richieste potrebbe rilevare che le funzionalità richieste non sono state implementate nel codice, e anche il testing dinamico potrebbe essere utilizzato per determinare che queste funzionalità richieste non sono state implementate"
    },
    "ambiguous": false,
    "learning_objective": "FL-3.1.2",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 10,
    "question_number": "16",
    "question_text": "Quale dei seguenti è un beneficio di feedback anticipati e frequente da parte degli stakeholder?",
    "question_image": "",
    "question_option": {
      "a": "I manager sono consapevoli di quali sviluppatori sono meno produttivi",
      "b": "Consente ai project manager di prioritizzare le loro interazioni con gli stakeholder",
      "c": "Facilita la comunicazione anticipata di potenziali problemi di qualità",
      "d": "Gli utenti finali comprendono meglio i motivi di un ritardo nel rilascio del prodotto di lavoro"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 23,
    "answer_option": "c",
    "answer_option_text": {
      "c": "È corretta. Ottenere il feedback anticipato e frequente degli stakeholder durante il processo di sviluppo software può essere molto vantaggioso, poiché facilita la comunicazione anticipata di potenziali problemi di qualità, può prevenire incomprensioni sui requisiti e assicura che qualsiasi modifica dei requisiti degli stakeholder sia compresa e implementata prima"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Il feedback è degli stakeholder (p.e. rappresentanti di business, utenti finali) e non degli sviluppatori, quindi questo feedback non è probabilmente per informare i manager su quali sviluppatori siano più o meno produttivi",
      "b": "Non è corretta. Il feedback anticipato e frequente degli stakeholder non viene utilizzato dai project manager per prioritizzare come interagiscono i diversi stakeholder",
      "d": "Non è corretta. Un feedback anticipato e frequente può prevenire lo sviluppo di un prodotto che non soddisfa le esigenze degli stakeholder, con conseguenti costosi rework e scadenze non rispettate; quindi, idealmente, non dovrebbero esistere ritardi. Inoltre, il feedback è degli stakeholder (e non su di loro), che includono gli utenti finali, quindi gli utenti finali che forniscono il loro feedback non aiuteranno la comprensione degli utenti finali"
    },
    "ambiguous": false,
    "learning_objective": "FL-3.2.1",
    "k_level": "K1",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 11,
    "question_number": "17",
    "question_text": "Date le seguenti descrizioni dei compiti: 1. Vengono selezionate le caratteristiche di qualità da valutare e i criteri di uscita 2. Viene distribuito il prodotto di lavoro ai partecipanti della review 3. Vengono identificati i potenziali difetti nel prodotto di lavoro 4. Vengono discussi i potenziali difetti E le seguenti attività di review: A. Review individuale B. Inizio della review C. Pianificazione D. Comunicazione e analisi Quale delle seguenti risposte definisce MEGLIO la corrispondenza tra le descrizioni dei compiti e le attività?",
    "question_image": "",
    "question_option": {
      "a": "1B, 2C, 3D, 4A",
      "b": "1B, 2D, 3C, 4A",
      "c": "1C, 2A, 3B, 4D",
      "d": "1C, 2B, 3A, 4D"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 24,
    "answer_option": "d",
    "answer_option_text": {
      "d": "corretta. L'abbinamento corretto è: 1C, 2B, 3A, 4D"
    },
    "no_answer_option_text": {
      "a": "Non è corretta",
      "b": "Non è corretta",
      "c": "Non è corretta"
    },
    "ambiguous": false,
    "learning_objective": "FL-3.2.2",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 11,
    "question_number": "18",
    "question_text": "Dati i seguenti ruoli nelle review: 1. Scribe 2. Review leader 3. Facilitatore 4. Manager E le seguenti responsabilità nelle review: A. Assicurare lo svolgimento efficace dei review meeting e la creazione di un ambiente di review sicuro B. Memorizzare le informazioni della review, come le decisioni e le nuove anomalie rilevate durante il review meeting C. Decidere cosa deve essere sottoposto a review e assegnare le risorse, come lo staff e il tempo per la review D. Assumere la responsabilità generale della review, organizzando ad esempio quando e dove si svolgerà la review Quale delle seguenti risposte definisce MEGLIO la corrispondenza tra i ruoli e le responsabilità nella review?",
    "question_image": "",
    "question_option": {
      "a": "1A, 2B, 3D, 4C",
      "b": "1A, 2C, 3B, 4D",
      "c": "1B, 2D, 3A, 4C",
      "d": "1B, 2D, 3C, 4A"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 25,
    "answer_option": "c",
    "answer_option_text": {
      "c": "corretta. La corrispondenza corretta è: 1B, 2D, 3A, 4C"
    },
    "no_answer_option_text": {
      "a": "Non è corretta",
      "b": "Non è corretta",
      "d": "Non è corretta"
    },
    "ambiguous": false,
    "learning_objective": "FL-3.2.3",
    "k_level": "K1",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 12,
    "question_number": "19",
    "question_text": "Quale delle seguenti affermazioni descrive MEGLIO la differenza tra il testing della tabella delle decisioni e il testing dei rami?",
    "question_image": "",
    "question_option": {
      "a": "Nel testing della tabella delle decisioni, i test case sono derivati dalle decisioni presenti nel codice. Nel testing dei rami, i test case sono derivati dalla conoscenza del flusso di controllo dell'oggetto di test",
      "b": "Nel testing della tabella delle decisioni, i test case sono derivati dalle specifiche che descrivono la logica di business. Nel testing dei rami i test case si basano sull'anticipazione di potenziali difetti nel codice sorgente",
      "c": "Nel testing della tabella delle decisioni, i test case sono derivati dalla conoscenza del flusso di controllo dell'oggetto di test. Nel testing dei rami, i test case sono derivati dalla specifica che descrive la logica di business",
      "d": "Nel testing della tabella delle decisioni, i test case sono indipendenti da come viene implementato il software. Nel testing dei rami, i test case possono essere creati solo dopo la progettazione o l'implementazione del codice"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 26,
    "answer_option": "d",
    "answer_option_text": {
      "d": "È corretta. Il testing della tabella delle decisioni è una tecnica di test black-box, quindi si basa sull'analisi del comportamento specificato dell'oggetto di test senza fare riferimento alla sua struttura interna. Pertanto, i test case sono indipendenti dal modo in cui il software viene implementato. Il testing dei rami è una tecnica di test white-box, quindi i test case si basano sull'analisi della struttura interna dell'oggetto di test. Poiché i test case dipendono dal modo in cui il software viene progettato, possono essere creati solo dopo la progettazione o l'implementazione dell'oggetto di test"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Il testing della tabella delle decisioni è una tecnica di test black-box e non white-box: i test case non sono basati sulle decisioni nel codice sorgente. Nel testing dei rami, i test case sono derivati dalla conoscenza del flusso di controllo dell'oggetto di test",
      "b": "Non è corretta. L'anticipazione dei potenziali difetti viene utilizzata nella tecnica di error guessing (una tecnica di test basata sull'esperienza), non nel testing dei rami (una tecnica di test white- box). Nel testing della tabella delle decisioni, i test case sono derivati dalla specifica che descrive la logica di business",
      "c": "Non è corretta. Se un test case si basa sulla conoscenza del flusso di controllo dell'oggetto di test, si tratta di una tecnica di test white- box. Il testing della tabella delle decisioni si basa tipicamente sull'analisi della logica di business, quindi è una tecnica di test black-box. Nel testing dei rami, i test case non sono derivati dalle specifiche, il che lo renderebbe una tecnica di test black-box. II testing dei rami è una tecnica di test white-box, in cui i test case sono derivati dalla struttura del codice sorgente"
    },
    "ambiguous": false,
    "learning_objective": "FL-4.1.1",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 12,
    "question_number": "20",
    "question_text": "I clienti della catena di autolavaggio TestWash hanno delle tessere che memorizzano il numero di lavaggi effettuati fino a quel momento. Il valore iniziale è 0. Dopo l'ingresso nell'autolavaggio, il sistema aumenta di uno il numero sulla tessera. Questo valore rappresenta il numero attuale di lavaggi effettuati. In base a questo numero, il sistema decide quale sconto applicare al cliente. Ad ogni decimo lavaggio effettuato (ogni dieci lavaggi) il sistema offre uno sconto del 10%. Per ogni ventesimo lavaggio effettuato (ogni venti lavaggi) il sistema offre un ulteriore sconto del 40% (per un totale di sconto del 50%). Quale dei seguenti insiemi di dati di input (intesi come numeri attuale di lavaggi effettuati) raggiunge la copertura più alta delle partizioni di equivalenza?",
    "question_image": "",
    "question_option": {
      "a": "19, 20, 30",
      "b": "11, 12, 20",
      "c": "1, 10, 50",
      "d": "10, 29, 30, 31"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 27,
    "answer_option": "a",
    "answer_option_text": {
      "a": "È corretta. 19 copre la partizione \"nessuno sconto\", 20 copre la partizione \"50% di sconto\" e 30 copre la partizione \"10% di sconto\". Questi tre valori coprono tutte e tre le partizioni di equivalenza valide"
    },
    "no_answer_option_text": {
      "b": "Non è corretta. 11 e 12 coprono la partizione \"nessuno sconto\", 20 copre la partizione \"50% di sconto\". La partizione \"10% di sconto\" non è coperta, quindi complessivamente sono coperte due delle tre partizioni di equivalenza valide",
      "c": "Non è corretta. 1 copre la partizione \"nessuno sconto\", 10 e 50 coprono la partizione \"10% di sconto\". La partizione \"50% di sconto\" non è coperta, quindi complessivamente sono coperte due delle tre partizioni di equivalenza valide",
      "d": "Non è corretta. 29 e 31 coprono la partizione \"nessuno sconto\", 10 e 30 coprono la partizione \"10% di sconto\". La partizione \"50% di sconto\" non è coperta, quindi complessivamente sono coperte due delle tre partizioni di equivalenza valide"
    },
    "ambiguous": false,
    "learning_objective": "FL-4.2.1",
    "k_level": "K3",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 13,
    "question_number": "21",
    "question_text": "State testando un modulo che verifica la correttezza della lunghezza della password fornita come input. Il modulo accetta una password con la lunghezza corretta e rifiuta una password troppo corta o troppo lunga. La lunghezza corretta della password è compresa tra 6 e 12 caratteri, altrimenti viene considerata errata. In fase iniziale, il modulo è vuoto (lunghezza password =0 valida). Applicate l'analisi ai valori limite alla variabile \"lunghezza password\". L'insieme dei test case raggiunge il 100% di copertura dell'analisi ai valori limite a 2 valori. Il team ha deciso che, a causa dell'elevato rischio di questo componente, si dovrebbero aggiungere test case per garantire il 100% di copertura dell'analisi ai valori limite a 3 valori. Quali valori di \"lunghezza password\" dovrebbero essere aggiunti per ottenere questo risultato?",
    "question_image": "",
    "question_option": {
      "a": "4, 5, 13, 14",
      "b": "7, 11",
      "c": "1, 5, 13",
      "d": "1, 4, 7, 11, 14"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 28,
    "answer_option": "d",
    "answer_option_text": {
      "d": "È corretta"
    },
    "no_answer_option_text": {
      "a": "Non è corretta",
      "b": "Non è corretta",
      "c": "Non è corretta"
    },
    "ambiguous": false,
    "learning_objective": "FL-4.2.2",
    "k_level": "K3",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 14,
    "question_number": "22",
    "question_text": "La seguente tabella delle decisioni contiene le regole per determinare il rischio di arteriosclerosi. Sono stati progettati cinque test case con i seguenti dati di input: TC1: Colesterolo = 125 mg/dl, Pressione sanguigna = 141 mm Hg; TC2: Colesterolo = 200 mg/dl, Pressione sanguigna = 201 mm Hg; TC3: Colesterolo = 124 mg/dl, Pressione sanguigna = 201 mm Hg; TC4: Colesterolo = 109 mg/dl, Pressione sanguigna = 200 mm Hg; TC5: Colesterolo = 201 mg/dl, Pressione sanguigna = 140 mm Hg. Quale è la copertura della tabella delle decisioni raggiunta con questi test case?",
    "question_image": "img/B/22.png",
    "question_option": {
      "a": "40%",
      "b": "60%",
      "c": "80%",
      "d": "100%"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 29,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta."
    },
    "no_answer_option_text": {
      "a": "Non è corretta",
      "c": "Non è corretta",
      "d": "Non è corretta"
    },
    "ambiguous": false,
    "learning_objective": "FL-4.2.3",
    "k_level": "K3",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 15,
    "question_number": "23",
    "question_text": "Un sistema di archiviazione può memorizzare fino a tre elementi ed è stato modellato dal seguente state transition diagram. La variabile N rappresenta il numero di elementi attualmente archiviati. Quale dei seguenti test case, rappresentati come sequenze di eventi, raggiunge il livello di copertura più alto delle transizioni valide?",
    "question_image": "img/B/23.png",
    "question_option": {
      "a": "Add, Remove, Add, Add, Add",
      "b": "Add, Add, Add, Add, Remove, Remove",
      "c": "Add, Add, Add, Remove, Remove",
      "d": "Add, Add, Add, Remove, Add"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 30,
    "answer_option": "c",
    "answer_option_text": {
      "c": "Il test c) può essere scritto come E1, E2, E4, E5, E3 (quindi copre 5 transizioni valide su 5, ottenendo il 100% di copertura delle transizioni valide)."
    },
    "no_answer_option_text": {
      "a": "Il test a) può essere scritto come E1, E3, E3, E2, E4 (quindi copre 4 delle 5 transizioni valide, ottenendo una copertura dell'80% delle transizioni valide).",
      "b": "Il test b) non è fattibile, poiché dopo le prime tre azioni \"Add\" il sistema si trova nello stato FULL e non esiste una transizione valida attivata dall'evento \"Add\" per uscire da FULL. Dopo le prime tre transizioni si raggiunge solo il 60% di copertura delle transizioni valide.",
      "d": "Il test d) può essere scritto come E1, E2, E4, E5, E4 (quindi copre 4 transizioni valide su 5, ottenendo una copertura dell'80% delle transizioni valide)."
    },
    "ambiguous": false,
    "learning_objective": "FL-4.2.4",
    "k_level": "K3",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 15,
    "question_number": "24",
    "question_text": "Avete eseguito due test case, T1 e T2, sullo stesso codice. Il test case T1 ha ottenuto il 40% di copertura delle istruzioni e il test case T2 ha ottenuto il 65% di copertura delle istruzioni. Quale delle seguenti frasi deve essere necessariamente vera?",
    "question_image": "",
    "question_option": {
      "a": "La test suite composta dai test case T1 e T2 raggiunge il 105% di copertura delle istruzioni",
      "b": "Esiste almeno un'istruzione che deve essere stata eseguita sia da T1 che da T2",
      "c": "Almeno il 5% delle istruzioni nel codice non sono eseguibili",
      "d": "La test suite composta dai test case T1 e T2 raggiunge la copertura completa dei rami completa"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 31,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta. Se le istruzioni eseguite da T1 e T2 fossero disgiunte, la copertura della test suite (T1, T2) sarebbe del 105%, il che è impossibile (si veda la risposta a). Pertanto, almeno il 5% delle istruzioni eseguibili deve essere stato eseguito sia da T1 sia da T2"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. La copertura è sempre definita come percentuale degli elementi coperti. Pertanto, non può superare il 100%",
      "c": "Non è corretta. La copertura delle istruzioni non dice nulla sul numero di istruzioni non eseguibili nel codice",
      "d": "Non è corretta. Anche se una test suite raggiunge la copertura completa delle istruzioni, questo non implica il raggiungimento della copertura completa dei rami"
    },
    "ambiguous": false,
    "learning_objective": "FL-4.3.1",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 16,
    "question_number": "25",
    "question_text": "La metrica di copertura dei rami è definita come BCov =[X/Y]*100% Cosa rappresentano X e Y in questa formula?",
    "question_image": "",
    "question_option": {
      "a": "x= numero di esiti decisionali esercitati dai test case Y= numero totale di esiti decisionali nel codice",
      "b": "x= numero di rami condizionali esercitati dai test case Y= numero totale di rami nel codice",
      "c": "x= numero di rami esercitati dai test case Y= numero totale di rami nel codice",
      "d": "x= numero di rami condizionali esercitati dai test case Y= numero totale di esiti decisionali nel codice"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 32,
    "answer_option": "c",
    "answer_option_text": {
      "c": "È corretta. La copertura dei rami è misurata come il numero di rami esercitati dai test case diviso per il numero totale di rami ed è espressa in percentuale"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Un esito decisionale è un ramo condizionale. Per il testing dei rami, X conta non solo i rami condizionali, ma anche quelli non condizionali",
      "b": "Non è corretta. La copertura dei rami conta non solo i rami condizionali, ma anche quelli non condizionali",
      "d": "Non è corretta. Sia X che Y contano solo i rami condizionali e non tengono conto dei rami non condizionali"
    },
    "ambiguous": false,
    "learning_objective": "FL-4.3.2",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 16,
    "question_number": "26",
    "question_text": "Quali DUE delle seguenti affermazioni forniscono la MIGLIORE motivazione per utilizzare il testing esplorativo?",
    "question_image": "",
    "question_option": {
      "a": "Ai tester non è stato assegnato tempo sufficiente per la progettazione dei test e l'esecuzione dei test",
      "b": "La strategia di test esistente prevede che i tester utilizzino tecniche di test black-box formali",
      "c": "La specifica è scritta in un linguaggio formale che può essere processato da uno strumento",
      "d": "I tester sono membri di un team Agile e hanno buone competenze di programmazione",
      "e": "I tester hanno esperienza nel dominio di business e possiedono buone competenze analitiche"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 33,
    "answer_option": "a,e",
    "answer_option_text": {
      "a": "È corretta. Il testing esplorativo è utile quando le specifiche sono poche o inadeguate o quando il tempo a disposizione per il testing è molto limitato",
      "e": "È corretta. Il testing esplorativo sarà più efficace se il tester è esperto, ha una conoscenza del dominio e possiede un alto grado di competenze fondamentali, come capacità analitiche, curiosità e creatività"
    },
    "no_answer_option_text": {
      "b": "Non è corretta. Il testing esplorativo non è una tecnica di test black- box",
      "c": "Non è corretta. Il testing esplorativo è utile quando le specifiche sono scritte in modo inadeguato",
      "d": "Non è corretta. In linea di principio, le competenze di programmazione non hanno nulla a che fare con il testing esplorativo"
    },
    "ambiguous": false,
    "learning_objective": "FL-4.4.2",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 16,
    "question_number": "27",
    "question_text": "Quale delle seguenti risposte si adatta MEGLIO ad essere un elemento di una checklist utilizzata nel testing checklist-based?",
    "question_image": "",
    "question_option": {
      "a": "\"Lo sviluppatore ha commesso un errore nell'implementazione del codice\"",
      "b": "\"La copertura delle istruzioni raggiunta supera l'85%\"",
      "c": "\"Il programma funziona correttamente relativamente ai requisiti funzionali e non- funzionali\"",
      "d": "\"I messaggi di errore sono scritti in un linguaggio comprensibile all'utente\""
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 34,
    "answer_option": "d",
    "answer_option_text": {
      "d": "E corretta. Questo è un esempio di condizione di test che può essere verificata da una persona"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Le checklist dovrebbero contenere le condizioni di test da verificare. Questo è un esempio di errore, non di una condizione di test; anche se il tester è stato in grado di dedurre alcune potenziali condizioni di test dagli esempi di errore, questa descrizione di errore è troppo generica",
      "b": "Non è corretta. Le checklist non dovrebbero contenere elementi che sono più adatti come criteri di uscita. Questo è un esempio di criterio di uscita",
      "c": "Non è corretta. Le checklist non dovrebbero contenere elementi troppo generici. Questo è un elemento molto generico, che praticamente descrive l'obiettivo del testing"
    },
    "ambiguous": false,
    "learning_objective": "FL-4.4.3",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 17,
    "question_number": "28",
    "question_text": "Considerate i seguenti criteri di accettazione per una user story scritta dal punto di vista del proprietario di un negozio online. (Given) Dato che l'utente ha effettuato il login e si trova nella homepage, (When) Quando l'utente seleziona \"Aggiungi Elemento\", (Then) Allora dovrebbe apparire il modulo \"Crea Elemento\", (And) e l'utente dovrebbe poter inserire un nome e un prezzo per il nuovo elemento. In quale formato è scritto questo criterio di accettazione?",
    "question_image": "",
    "question_option": {
      "a": "Rule-oriented",
      "b": "Scenario-oriented",
      "c": "Product-oriented",
      "d": "Process-oriented"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 34,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta. Si tratta di un formato Given/When/Then, che è scenario- oriented"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Il formato rule-oriented include formati come liste di verifica con punti elenco o forme tabellari del mapping input- output, che visualizzano in modo esplicito le regole da seguire. GivenWhen//Then è un formato scenario-oriented perché descrive uno scenario da verificare",
      "c": "Non è corretta. Non esiste un formato \"product-oriented\" dei criteri di accettazione",
      "d": "Non è corretta. Non esiste un formato \"process-oriented\" dei criteri di accettazione"
    },
    "ambiguous": false,
    "learning_objective": "FL-4.5.2",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 17,
    "question_number": "29",
    "question_text": "Il vostro team analizza la seguente user story in modo da poter definire i criteri di accettazione: Come cliente registrato, voglio poter visualizzare i miei ordini precedenti sul sito web dell'azienda, in modo da tenere traccia dei miei acquisti. Quale dei seguenti test case NON è rilevante per questa user story?",
    "question_image": "",
    "question_option": {
      "a": "Input: il cliente accede al proprio account sul sito web e seleziona \"vedi cronologia ordini\" Output atteso: il sistema visualizza un elenco di tutti gli ordini precedenti del cliente, inclusi la data, il numero dell'ordine e il costo totale",
      "b": "Input: il cliente seleziona un ordine dall'elenco degli ordini Output atteso: il sistema visualizza i singoli articoli acquistati, con i relativi prezzi e quantità",
      "c": "Input: il cliente seleziona \"Ordina in ordine crescente\" nella schermata di cronologia degli ordini Output atteso: il sistema mostra la cronologia degli ordini, per numero d'ordine e in ordine crescente",
      "d": "Input: un cliente non registrato si registra come nuovo cliente con un indirizzo e-mail valido che non esiste nel database clienti Output atteso: il sistema accetta la registrazione e crea l'account"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 35,
    "answer_option": "d",
    "answer_option_text": {
      "d": "È corretta. Il test case è relativo al processo di registrazione, che non viene trattato nella user story. La user story è relativa alla visualizzazione degli ordini precedenti"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Il test case è relativo alla visualizzazione degli ordini precedenti nella cronologia degli ordini",
      "b": "Non è corretta. Il test case è relativo alla visualizzazione degli ordini precedenti",
      "c": "Non è corretta. Il test case è relativo alla visualizzazione degli ordini precedenti nella cronologia degli ordini"
    },
    "ambiguous": false,
    "learning_objective": "FL-4.5.3",
    "k_level": "K3",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 18,
    "question_number": "30",
    "question_text": "Il vostro team segue il processo che utilizza la pipeline di delivery DevOps. Le prime tre fasi di questo processo sono: (1) Sviluppo del codice (2) Sottomettere il codice in un sistema di controllo della versione ed eseguire il merge al branch (ramo) \"test\" (3) Eseguire il testing di componente per il codice sottomesso Quale dei seguenti è il criterio di ingresso PIÙ adatto per la fase (2) di questa pipeline?",
    "question_image": "",
    "question_option": {
      "a": "L'analisi statica non restituisce warning di severità alta per il codice sottomesso",
      "b": "II controllo della versione del sistema non segnala conflitti durante il merge del codice nel branch\"test\"",
      "c": "I test di componente sono compilati e pronti per essere eseguiti",
      "d": "La copertura delle istruzioni è almeno dell'80%"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 35,
    "answer_option": "a",
    "answer_option_text": {
      "a": "È corretta. Questo criterio può (e dovrebbe) essere controllato prima che il codice venga sottoposto al controllo della versione"
    },
    "no_answer_option_text": {
      "b": "Non è corretta. Questo criterio può essere controllato dopo che la fase (2) è stata eseguita, perché la segnalazione dei conflitti durante il merge può essere fatta dopo che il codice è stato sottomesso ed eseguito il merge",
      "c": "Non è corretta. Questo criterio è più adatto come criterio di ingresso per la fase (3)",
      "d": "Non è corretta. Questo criterio è più adatto come criterio di uscita per la fase (3)"
    },
    "ambiguous": false,
    "learning_objective": "FL-5.1.3",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 18,
    "question_number": "31",
    "question_text": "Volete stimare l'effort del test per il nuovo progetto utilizzando una stima basata su valori statistici. Calcolate l'effort del test rispetto all'effort totale dello sviluppo utilizzando i valori medi per l'effort dello sviluppo e per l'effort del test di quattro progetti storici che sono similari al nuovo progetto. La tabella mostra questi dati storici. L'effort dello sviluppo stimato per il nuovo progetto è di $800.000. Quale è la vostra stima dell'effort del test per questo progetto?",
    "question_image": "img/B/31.png",
    "question_option": {
      "a": "$40.000",
      "b": "$80.000",
      "c": "$81.250",
      "d": "$82.500"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 36,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta. L'effort medio di sviluppo calcolato sui quattro progetti è $900.000=(800.000+1,200.000+600.000+1.000.000)/4 e l'effort medio del testing è $90.000=(40.000+130.000+70.000+120.000)/4. Il rapporto tra effort medio del testing e effort medio di sviluppo è di 1:10 (90.000/900.000), il che significa che storicamente, in media, l'effort di testing è pari al 10% dell'effort di sviluppo. Quindi, se l'effort di sviluppo è stimato $800.000, l'effort del testing viene stimato come: 10%*$800,000=0.1*$800,000=$80,000."
    },
    "no_answer_option_text": {
      "a": "Non è corretta",
      "c": "Non è corretta",
      "d": "Non è corretta"
    },
    "ambiguous": false,
    "learning_objective": "FL-5.1.4",
    "k_level": "K3",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 19,
    "question_number": "32",
    "question_text": "State eseguendo il testing di un'applicazione web che permette agli utenti di eseguire la RICERCA di prodotti, VISUALIZZARE i dettagli dei prodotti, AGGIUNGERE prodotti al carrello ed effettuare un ORDINE. Avete progettato i seguenti sette test case, che volete eseguire secondo la migliore sequenza, basata sulle priorità dei test: Avete inoltre identificato le seguenti dipendenze logiche tra i test case: La funzionalità RICERCA deve essere testata prima della funzionalità VISUALIZZARE • La funzionalità VISUALIZZARE deve essere testata prima della funzionalità AGGIUNGERE La funzionalità AGGIUNGERE deve essere testata prima della funzionalità ORDINE. Quale test case dovrebbe essere eseguito come quarto test case?",
    "question_image": "img/B/32.png",
    "question_option": {
      "a": "TC3",
      "b": "TC1",
      "c": "TC7",
      "d": "TC2"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 36,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. TC1 deve essere eseguito prima di TC3",
      "c": "Non è corretta. TC7 è l'ultimo che deve essere eseguito",
      "d": "Non è corretta. Il prodotto B deve essere eseguito prima del prodotto A"
    },
    "ambiguous": false,
    "learning_objective": "FL-5.1.5",
    "k_level": "K3",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 19,
    "question_number": "33",
    "question_text": "In base al modello dei quadranti del testing, quale dei seguenti appartiene al quadrante Q1 (\"Test orientati alla tecnologia che supportano il team di sviluppo\")?",
    "question_image": "",
    "question_option": {
      "a": "Testing di usabilità",
      "b": "Testing funzionale",
      "c": "User Acceptance Testing",
      "d": "Testing di integrazione dei componenti"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 38,
    "answer_option": "d",
    "answer_option_text": {
      "d": "È corretta. Il testing di integrazione dei componenti è un testing orientato alla tecnologia che supporta il team di sviluppo (Q1)"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Il testing di usabilità è un testing orientato al business che critica il prodotto (Q3)",
      "b": "Non è corretta. Il testing funzionale è un testing orientato al business che supporta il team di sviluppo (Q2)",
      "c": "Non è corretta. Lo User Acceptance Testing è un testing orientato al business che critica il prodotto (Q3)"
    },
    "ambiguous": false,
    "learning_objective": "FL-5.1.7",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 20,
    "question_number": "34",
    "question_text": "Dati i seguenti rischi: 1. Un'implementazione inefficace del ciclo genera risposte di sistema molto lente 2. I consumatori hanno cambiato le loro preferenze 3. Allagamento della sala server 4. I pazienti al di sopra di una certa età ricevono report non accurati E le seguenti attività di mitigazione: A. Accettazione del rischio B. Performance testing C. Utilizzo della tecnica di test analisi ai valori limite D. Trasferimento del rischio Quale delle seguenti risposte è la MIGLIORE corrispondenza tra rischi e attività di mitigazione?",
    "question_image": "",
    "question_option": {
      "a": "1C, 2D, 3A, 4B",
      "b": "1B, 2D, 3A, 4C",
      "c": "1B, 2A, 3D, 4C",
      "d": "1C, 2A, 3D, 4B"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 38,
    "answer_option": "c",
    "answer_option_text": {
      "c": "È corretta. La corrispondenza corretta tra rischio e mitigazione è: 1B, 2A, 3D e 4C"
    },
    "no_answer_option_text": {
      "a": "Non è corretta",
      "b": "Non è corretta",
      "d": "Non è corretta"
    },
    "ambiguous": false,
    "learning_objective": "FL-5.2.4",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 20,
    "question_number": "35",
    "question_text": "Quale delle seguenti è una metrica di qualità del prodotto?",
    "question_image": "",
    "question_option": {
      "a": "Mean time to failure",
      "b": "Numero di difetti rilevati",
      "c": "Copertura dei requisiti",
      "d": "Percentuale di rilevamento dei difetti"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 39,
    "answer_option": "a",
    "answer_option_text": {
      "a": "È corretta. Le metriche di qualità del prodotto misurano le caratteristiche di qualità. Il mean time to failure misura la maturità, quindi è una metrica di qualità del prodotto"
    },
    "no_answer_option_text": {
      "b": "Non è corretta. Questo è un esempio di metrica dei difetti, non di metrica di qualità del prodotto",
      "c": "Non è corretta. Questo è un esempio di metrica di copertura, non di metrica di qualità del prodotto",
      "d": "Non è corretta. Questo è un esempio di metrica dei difetti, non di metrica di qualità del prodotto"
    },
    "ambiguous": false,
    "learning_objective": "FL-5.3.1",
    "k_level": "K1",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 20,
    "question_number": "36",
    "question_text": "Il vostro team di test fa parte di un team di progetto situato in Nord America, che sta sviluppando un prodotto per un cliente in Europa. Il progetto applica uno sviluppo software Agile e segue l'approccio DevOps, utilizzando una pipeline di continuous integration/continuous delivery. Quale dei seguenti è il modo MENO efficace per comunicare al cliente l'avanzamento dei test?",
    "question_image": "",
    "question_option": {
      "a": "Face-to-face",
      "b": "Dashboard",
      "c": "E-mail",
      "d": "Videoconferenza"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 39,
    "answer_option": "a",
    "answer_option_text": {
      "a": "È corretta. Il cliente si trova in una località e un fuso orario differenti, quindi potrebbe essere difficile comunicare face-to- face"
    },
    "no_answer_option_text": {
      "b": "Non è corretta. Le dashboard sono generalmente disponibili per qualsiasi utente in qualsiasi momento, quindi la differenza di fuso orario non sarà un ostacolo alla comunicazione come la comunicazione verbale, face-to-face",
      "c": "Non è corretta. Anche se la differenza di fuso orario tra Europa e Nord America è di diverse ore, e questo può causare qualche inconveniente, non è certamente così grande come nel caso di una comunicazione face-to-face",
      "d": "Non è corretta. Gli strumenti di videoconferenza sono un mezzo di comunicazione conveniente. Sebbene la comunicazione tra Europa e Nord America durante l'orario di lavoro richieda di solito che una delle parti si colleghi nelle prime ore del mattino o nelle ore più tarde, questo non è un inconveniente come la comunicazione verbale, face-to-face"
    },
    "ambiguous": false,
    "learning_objective": "FL-5.3.3",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 21,
    "question_number": "37",
    "question_text": "Quale delle seguenti risposte descrive MEGLIO un esempio di come il configuration management (CM) supporta il testing?",
    "question_image": "",
    "question_option": {
      "a": "A partire dal version number dell'ambiente, lo strumento di CM può recuperare i version number delle librerie, degli stub e dei driver utilizzati nell'ambiente",
      "b": "A partire dalle configurazioni di test definite dal record dei valori di input dei test, lo strumento di CM può eseguire i test case per queste configurazioni e calcolare la copertura dei test",
      "c": "A partire dai dati relativi alla data di acquisto di una licenza software, lo strumento di CM genera automaticamente le informazioni su quando una licenza del prodotto sta terminando",
      "d": "A partire dal version number del test case, lo strumento di CM può generare automaticamente i dati di test per questo test case"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 40,
    "answer_option": "a",
    "answer_option_text": {
      "a": "È corretta. Per un elemento di configurazione complesso (p.e. un ambiente di test), lo strumento di Configuration Management (CM) memorizza gli elementi che lo compongono, le loro relazioni e le versioni"
    },
    "no_answer_option_text": {
      "b": "Non è corretta. Gli strumenti di CM non eseguono i test case e non calcolano la copertura",
      "c": "Non è corretta. Uno strumento di CM non è uno strumento di gestione delle licenze",
      "d": "Non è corretta. Gli strumenti di CM non generano dati di test"
    },
    "ambiguous": false,
    "learning_objective": "FL-5.4.1",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 21,
    "question_number": "38",
    "question_text": "State eseguendo il testing di una funzione di ordinamento che riceve come input un insieme di numeri e restituisce lo stesso insieme di numeri ordinati in ordine crescente. Il log dell'esecuzione dei test è il seguente: Configurazione dell'ambiente: Quale delle seguenti risposte fornisce la MIGLIORE descrizione di un failure in un defect report?",
    "question_image": "img/B/38.png",
    "question_option": {
      "a": "Il sistema non riesce a ordinare diverse serie di numeri. Riferimento: TC3, TC4, TC5",
      "b": "Il sistema sembra non tenere conto dei duplicati durante l'ordinamento. Riferimento: TC3, TC4, TC5",
      "c": "Il sistema non riesce a ordinare i numeri negativi. Riferimento: TC4, TC5",
      "d": "TC3, TC4 e TC5 presentano difetti (dati di input duplicati) e dovrebbero essere corretti"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 40,
    "answer_option": "b",
    "answer_option_text": {
      "b": "È corretta. Dai risultati dei test sembra che il sistema ignori i duplicati e ordini la lista ignorando le ripetizioni. Questa è probabilmente la causa dei failure in TC3, TC4, TC5. Queste informazioni possono aiutare lo sviluppatore a rilevare il difetto e a correggerlo in modo più efficiente"
    },
    "no_answer_option_text": {
      "a": "Non è corretta. Sebbene la frase sia vera, non fornisce abbastanza valore per lo sviluppatore",
      "c": "Non è corretta. Il sistema non fallisce nell'ordinare i numeri negativi. Il problema è piuttosto quello di non considerare i duplicati",
      "d": "Non è corretta. I test case TC3, TC4 e TC5 falliscono, ma non si ha conoscenza che i test case abbiano dei difetti"
    },
    "ambiguous": false,
    "learning_objective": "FL-5.5.1",
    "k_level": "K3",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 22,
    "question_number": "39",
    "question_text": "Date le seguenti descrizioni: 1. Supporto al tracciamento del workflow (flusso di lavoro) 2. Facilitare la comunicazione 3. Virtual machine 4. Review di supporto E le seguenti categorie di strumenti di test: A. Strumenti di testing statico B. Strumenti che supportano la scalabilità e la standardizzazione del rilascio C. Strumenti DevOps D. Strumenti di collaborazione Quale delle seguenti risposte è la MIGLIORE corrispondenza tra le descrizioni e le categorie di strumenti di test?",
    "question_image": "",
    "question_option": {
      "a": "1A, 2B, 3C, 4D",
      "b": "1B, 2D, 3C, 4A",
      "c": "1C, 2D, 3B, 4A",
      "d": "1D, 2C, 3A, 4B"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 41,
    "answer_option": "c",
    "answer_option_text": {
      "c": "È corretta. L'abbinamento corretto è: 1C, 2D, 3B, 4A"
    },
    "no_answer_option_text": {
      "a": "Non è corretta",
      "b": "Non è corretta",
      "d": "Non è corretta"
    },
    "ambiguous": false,
    "learning_objective": "FL-6.1.1",
    "k_level": "K2",
    "points": 1
  },
  {
    "question_pdf": "ITASTQB-QTEST-FL-2023-B.pdf",
    "question_page": 22,
    "question_number": "40",
    "question_text": "Quale dei seguenti è il vantaggio PIÙ probabile della test automation?",
    "question_image": "",
    "question_option": {
      "a": "Fornisce misure di copertura che sono troppo complicate da ricavare per l'uomo",
      "b": "Condivide la responsabilità del testing con il fornitore dello strumento",
      "c": "Elimina la necessità di un pensiero critico durante l'analisi dei risultati dei test",
      "d": "Genera test case a partire dall'analisi del codice del programma"
    },
    "answer_pdf": "ITASTQB-QTEST-FL-2023-B-SOL.pdf",
    "answer_page": 42,
    "answer_option": "a",
    "answer_option_text": {
      "a": "È corretta. La test automation può fornire misure troppo complicate da ricavare per l'uomo, come le misure di copertura dei test white- box per tutto il codice, tranne quello più banale"
    },
    "no_answer_option_text": {
      "b": "Non è corretta. Utilizzando gli strumenti di test, la responsabilità del testing NON è condivisa con il fornitore dello strumento, poiché il fornitore non è coinvolto nel testing ed è responsabilità del tester. L'unica possibile responsabilità che potrebbe essere assegnata al fornitore dello strumento è se lo strumento non funziona come previsto e fornisce risultati di test errati",
      "c": "Non è corretta. I tester devono comunque esercitare un pensiero critico quando analizzano le anomalie nei risultati dei test, per determinarne la probabile causa",
      "d": "Non è corretta. Né i tester né gli strumenti possono generare test case semplicemente dall'analisi del codice del programma, poiché il codice è l'implementazione e non fornisce informazioni sui risultati attesi, che dovranno essere generati a partire da un'altra base di test, come le specifiche di progettazione"
    },
    "ambiguous": false,
    "learning_objective": "FL-6.2.1",
    "k_level": "K1",
    "points": 1
  }
]